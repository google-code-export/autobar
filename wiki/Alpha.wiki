#summary Details about the current Alpha version on this site.

= What is not working right now: =
  * Preferences need improvement
    * ACE3 / Rock
  * Trinket2 equip buttons not working.  This needs special code which has not been written yet.
  * Macro Buttons
    * Support for the built in sets of macros for character (18) & general (18) as well.
    * Travel macro beyond just druids: Ghost Wolf, Pally Aura & Hunter thingy.
  * Button specific options mia
    * Turn the summoning aspect off for the food/water buttons
    * Disable invert buttons on offhand buff
  * Drag & Drop
    * Items need to be draggable onto the category in the tree part of the config.
    * Items dragged onto a custom button automatically create a custom category if it does not have one & drop into it
    * Buttons need a drop setting that if enabled allow items to be dragged right onto the button itself
    * Categories in a button & items inside a category need to be draggable to rearrange them
  * Custom Categories need to be able to pick LibPeriodicTable-3.1 sets for their contents.
  * Full Mount support, including form switching, automatic flying vs ground selection, etc.
  * Rock: implement the link type so Rock can be used for config.
    * Rock: stringControl -> linkControl
  * LibStickyFrames-1.0
    * Mods label them so you can figure out currently not shown bars / frames etc.
    * Fine movement controls for a selected frame (say temporary arrow keys + modifiers for 1 or 5 pixel or grid movement)
    * Grouped moving
  * For custom categories allow direct selection of a PT3 set
    * Optional priority set that takes precedence over the regular set for a particular item's value.  For example conjured food over regular.
    * Split out ItemList as a translation / grouping / priority layer on top of PT3.
  * Highlighting so you can see your custom categories / buttons more easily
  * Plugin architecture for buttons so this can become more of a framework
  * Popup on Shift
  * Buttons
    * AutoBarButtonClassPet: for hunters(break19: left click summon, right click revive)
    * AutoBarButtonBuffSpell would need multiple keybinds (3+ ?)
    * AutoBarButtonER: castsequence reset = 600, Last Stand, category x, category y, button n, etc.  ER - Emergency Response.  NS heals for healers, Iceblock for mages, --> Shieldwall, Bubble for pallies
    * AutoBarButtonFishing: Keeps track of swapped gear, equips them on combat or some kind of ctrl-click or something.  First clicks equips fishing gear then pole then applies best lure when its missing.  Then casts a line.
    * AutoBarButtonSeal: for paladins
    * AutoBarButtonStealth: Priest, Rogue & Night Elf mia
    * AutoBarButtonTrap/Sting/Totem: need cooldowns
    * Note Petfood needs an ug to be a rightclick hunter eats & left click pet eats.

= What is still planned for the new version? =

 * Multiple bars are supported and you will be able to add your own custom bars soon.
 * Popup on shift.  There is just one more bug to iron out in the test state machine then this can be incorporated.
 * Items need to be shuffled as a bag location gets depleted during combat
 * Plugin architecture for buttons so this can become more of a framework
 * For custom categories allow direct selection of a PT3 set + an optional priority set (that takes precedence over the regular set for a particular item's value.  For example conjured food over regular)
 * Finish macro buttons.
  # Editable text for a custom macro
  # Ability to use one of the macros from Blizzard's macro interface.
 * Buttons
  # Finally do a proper mount button (a Macro Button)
  # Trinket buttons
 * Upgrade the StickyFrames "library" to handle multiple source frames via a registration mechanism & update BT3 to use it.  This would allow "sticky" dragging of AutoBars & "docking" them to BT3 & other bar mods using the StickyFrames stuff.
 * Customization via Waterfall is barely functional & needs drag & drop rearranging + icons in the tree view at a minimum.

= Why make a new version? =
The basic answer is that any software explores a problem domain.  Software also acts like it is alive while growing through the domain.  So given enough time, hacks & features, various software ailments start to develop:
 * Algorithm Necrosis
 * Data Rot
 * Bit Decay
 * Hack Plaque
 * Upgrade Resistance
 * API Collapse
To combat these maladies, the software is refactored from time to time to better explore current aspects of the problem domain and to enable exploration of new areas.

Such is the case with the current rewrite of AutoBar.  The ailments in the old version are numerous and multiple.  It became old & set in its ways and must now make way for a younger vigorous clone with improved dna & super powers to meet new challenges.  At times this will make it seem more monster than superhero, but bear with it, the end result will be worth the growing pains.

= What do I do if I want to go back to an old version? =
 * Simply download the old one you like from the downloads section.
 * If you reassigned any key bindings you will have to fix that yourself.